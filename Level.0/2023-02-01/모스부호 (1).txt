[모스부호 (1)]


[문제 설명]
머쓱이는 친구에게 모스부호를 이용한 편지를 받았습니다. 그냥은 읽을 수 없어 이를 해독하는 프로그램을 만들려고 합니다. 문자열 letter가 매개변수로 주어질 때, letter를 영어 소문자로 바꾼 문자열을 return 하도록 solution 함수를 완성해보세요.
모스부호는 다음과 같습니다.

morse = { 
    '.-':'a','-...':'b','-.-.':'c','-..':'d','.':'e','..-.':'f',
    '--.':'g','....':'h','..':'i','.---':'j','-.-':'k','.-..':'l',
    '--':'m','-.':'n','---':'o','.--.':'p','--.-':'q','.-.':'r',
    '...':'s','-':'t','..-':'u','...-':'v','.--':'w','-..-':'x',
    '-.--':'y','--..':'z'
}


[입출력 예]
letter	                          result
".... . .-.. .-.. ---"	              "hello"
".--. -.-- - .... --- -."	  "python"


[다른 사람의 풀이 1]
class Solution {
    val morse = mapOf( ".-" to "a","-..." to "b","-.-." to "c","-.." to "d","." to "e","..-." to "f","--." to "g","...." to "h",".." to "i",".---" to "j","-.-" to "k",".-.." to "l",
    "--" to "m","-." to "n","---" to "o",".--." to "p","--.-" to "q",".-." to "r",
    "..." to "s","-" to "t","..-" to "u","...-" to "v",".--" to "w","-..-" to "x",
    "-.--" to "y","--.." to "z"
)
    fun solution(letter: String) = letter.split(" ")
        .joinToString(
            separator = "",
            transform = morse::getValue,
        )
}


[다른 사람의 풀이 2]
class Solution {
    fun solution(letter: String): String {
        val morse = mapOf( 
    ".-" to 'a',"-..." to 'b',"-.-." to 'c',"-.." to 'd',"." to 'e',"..-." to 'f',"--." to 'g',"...." to 'h',".." to 'i',".---" to 'j',"-.-" to 'k',".-.." to 'l',"--" to 'm',"-." to 'n',"---" to 'o',".--." to 'p',"--.-" to 'q',".-." to 'r', "..." to 's',"-" to 't',"..-" to 'u',"...-" to 'v',".--" to 'w',"-..-" to 'x',"-.--" to 'y',"--.." to 'z')
        var answer = ""

        letter.split(" ").forEach {
            answer += morse[it].toString()
        }

        return answer
    }
}


[나의 풀이]
class Solution {
    fun solution(letter: String): String {
        
       val dictionary = mapOf(
            ".-" to "a",
            "-..." to "b",
            "-.-." to "c",
            "-.." to "d",
            "." to "e",
            "..-." to "f",
            "--." to "g",
            "...." to "h",
            ".." to "i",
            ".---" to "j",
            "-.-" to "k",
            ".-.." to "l",
            "--" to "m",
            "-." to "n",
            "---" to "o",
            ".--." to "p",
            "--.-" to "q",
            ".-." to "r",
            "..." to "s",
            "-" to "t",
            "..-" to "u",
            "...-" to "v",
            ".--" to "w",
            "-..-" to "x",
            "-.--" to "y",
            "--.." to "z"
        )
       
        return letter.split(" ".toRegex()).map { dictionary[it] }.joinToString("")
    }
}